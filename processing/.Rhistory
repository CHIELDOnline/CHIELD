bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename)
makeGraph(friday,"../results/friday.svg")
makeGraph(friday,"../results/friday.svg")
makeGraph
dev.off()
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French",
xlim=c(undefinedValue, 0.5),
ylim=c(undefinedValue, 0.5))
axis(1,at = seq(0,0.5,0.1))
axis(2,at = seq(0,0.5,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename)
makeGraph(friday,"../results/friday.svg")
friday
friday = friday[order(friday$similarity)]
friday = friday[order(friday$similarity),]
friday
range(friday$similarity)
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,0.5,0.1))
axis(2,at = seq(0,0.5,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.5)
makeGraph(friday,"../results/friday.svg", max_lim=1)
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,max_lim,0.1))
axis(2,at = seq(0,max_lim,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3, xpd=F)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.5)
makeGraph(friday,"../results/friday.svg", max_lim=1)
?text
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,max_lim,0.1))
axis(2,at = seq(0,max_lim,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3, xpd=T)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.5)
makeGraph(friday,"../results/friday.svg", max_lim=1)
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French)",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,max_lim,0.1))
axis(2,at = seq(0,max_lim,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3, xpd=T)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.5)
makeGraph(friday,"../results/friday.svg", max_lim=1)
friday
friday[friday$Word_Form_neighbour=="Thursday / jeudi",]
friday[friday$Neighbour=="Thursday / jeudi",]
friday[friday$Neighbour=="noon / midi",]
d = friday
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.en[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
d2[d2$English>0.75 & d2$French<0.5,]
friday[friday$Neighbour=="Thursday / jeudi",]
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.fr[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French)",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,max_lim,0.1))
axis(2,at = seq(0,max_lim,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3, xpd=T)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.5)
makeGraph(friday,"../results/friday.svg", max_lim=1)
range(worker$similarity)
setwd("~/Documents/Bristol/word2vec/CogSciAbstract/analysis/")
friday = read.csv("../data/friday.csv", stringsAsFactors = F)
worker = read.csv("../data/worker.csv", stringsAsFactors = F)
undefinedValue = -0.1
lowerLim = 0
undefinedColour = gray(0.5)
pointcol = rgb(0,0,0,0.3)
makeGraph = function(d,outputFilename,max_lim){
d.en = d[d$Language=="English",]
d.fr = d[d$Language=="French",]
n = unique(d$Neighbour)
d2 = data.frame(n = n,
English = d.en[match(n,d.en$Neighbour),]$similarity,
French = d.fr[match(n,d.fr$Neighbour),]$similarity)
d2$mean = apply(d2[,c("English","French")],1,function(X){
mean(X,na.rm = T)
})
d2[is.na(d2$English),]$English = undefinedValue
d2[is.na(d2$French),]$French = undefinedValue
svg(outputFilename, width=5, height=5)
par(mar=c(5, 5, 4, 2) + 0.1)
plot(d2$English, d2$French,
type = 'n',
xaxt='n',yaxt='n',
xlab="Cosine similarity (English)",
ylab="Cosine similarity (French)",
xlim=c(undefinedValue, max_lim),
ylim=c(undefinedValue, max_lim))
axis(1,at = seq(0,max_lim,0.1))
axis(2,at = seq(0,max_lim,0.1))
axis(1, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, col=undefinedColour)
axis(2, at=undefinedValue+0.02, labels = "No\nNeighbor",
tick = F, las=1, col=undefinedColour)
upper = d2[d2$English>undefinedValue & d2$French>undefinedValue,]
left = d2[d2$English ==undefinedValue & d2$French>undefinedValue,]
bottom = d2[d2$French == undefinedValue & d2$English>undefinedValue,]
rect(-0.5,-0.5,lowerLim,1, col = gray(0.95))
rect(-0.5,-0.5,1,lowerLim, col = gray(0.95))
box()
points(d2$English, d2$French, pch=16, col=pointcol)
abline(h=lowerLim)
abline(v=lowerLim)
#spread.labels(upper$English, upper$French,
#              upper$n)
text(upper$English, upper$French,
upper$n,pos = 3, xpd=T)
text(left$English, left$French,
left$n,pos = 4)
#spread.labels(left$English, left$French,
#          left$n)
text(bottom$English, bottom$French,
bottom$n,srt=90, pos=4)
dev.off()
}
d = worker
outputFilename = "../results/worker.svg"
makeGraph(d,outputFilename, max_lim=0.6)
makeGraph(friday,"../results/friday.svg", max_lim=1)
try(setwd("~/Documents/Bristol/CHIELD/CHIELD_Online/processing/"))
clinks = read.csv("../data/db/CausalLinks.csv", stringsAsFactors = F)
v = read.csv("../data/db/Variables.csv", stringsAsFactors = F)
head(clinks)
dict[["A"]] = c(dict[["A"]],"1")
dict = list()
dict[["A"]] = c(dict[["A"]],"1")
dict
# Convert the causal links to a python dictionary format
try(setwd("~/Documents/Bristol/CHIELD/CHIELD_Online/processing/"))
clinks = read.csv("../data/db/CausalLinks.csv", stringsAsFactors = F)
v = read.csv("../data/db/Variables.csv", stringsAsFactors = F)
# Convert ids to text names
# NO! Keep as pks
#clinks$Var1 = v[match(clinks$Var1, v$pk),]$name
#clinks$Var2 = v[match(clinks$Var2, v$pk),]$name
dict = list()
for(i in 1:nrow(clinks)){
if(clinks[i,]$Relation %in% c(">",">>","<=>","=~")){
dict[[clinks[i,]$Var1]] = c(dict[[clinks[i,]$Var1]],clinks[i,]$Var2)
}
if(clinks[i,]$Relation %in% c("<","<=>")){
dict[[clinks[i,]$Var2]] = c(dict[[clinks[i,]$Var2]],clinks[i,]$Var1)
}
}
i
clinks[i,]$Relation
dict
clinks[i,]$Var1
# Convert the causal links to a python dictionary format
try(setwd("~/Documents/Bristol/CHIELD/CHIELD_Online/processing/"))
clinks = read.csv("../data/db/CausalLinks.csv", stringsAsFactors = F)
clinks$Var1 = as.character(clinks$Var1)
clinks$Var2 = as.character(clinks$Var2)
# Convert ids to text names
# NO! Keep as pks
#v = read.csv("../data/db/Variables.csv", stringsAsFactors = F)
#clinks$Var1 = v[match(clinks$Var1, v$pk),]$name
#clinks$Var2 = v[match(clinks$Var2, v$pk),]$name
dict = list()
for(i in 1:nrow(clinks)){
if(clinks[i,]$Relation %in% c(">",">>","<=>","=~")){
dict[[clinks[i,]$Var1]] = c(dict[[clinks[i,]$Var1]],clinks[i,]$Var2)
}
if(clinks[i,]$Relation %in% c("<","<=>")){
dict[[clinks[i,]$Var2]] = c(dict[[clinks[i,]$Var2]],clinks[i,]$Var1)
}
}
dict
library(jsonlite)
toJSON(dict)
dict.json = toJSON(dict)
as.character(dict.json)
?writeLines
cat(as.character(dict.json),file="../app/data/db/CausalLinks.json")
??read_csv
library(digest)
library(stringr)
library(dplyr)
library(dbplyr)
library(RSQLite)
library(bibtex)
library(readr)
?"read_csv"
